<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>servlet-polyglot-xtend-examples</groupId>
  <artifactId>polyglot-simplest-server</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  <properties>
    <build.helper.maven.version>1.9.1</build.helper.maven.version>
    <maven.compiler.fork>true</maven.compiler.fork>
    <clean.maven.version>2.6.1</clean.maven.version>
    <maven.compiler.verbose>true</maven.compiler.verbose>
    <javax.servlet.version>3.1.0</javax.servlet.version>
    <maven.minimal.version>3.3.1</maven.minimal.version>
    <maven.compiler.debug>true</maven.compiler.debug>
    <web.port>7080</web.port>
    <spring.boot.maven.version>1.2.3.RELEASE</spring.boot.maven.version>
    <project.build.sourceEncoding>${project.encoding}</project.build.sourceEncoding>
    <install.maven.version>2.4</install.maven.version>
    <war.maven.version>2.6</war.maven.version>
    <surefire.maven.version>2.18.1</surefire.maven.version>
    <maven.compiler.source>${project.jdk.version}</maven.compiler.source>
    <compiler.maven.version>3.3</compiler.maven.version>
    <resources.maven.version>2.7</resources.maven.version>
    <main.class>popsuite.bootstrap.jetty.Launcher</main.class>
    <maven.compiler.optimize>true</maven.compiler.optimize>
    <root-name>servlet-polyglot-xtend</root-name>
    <project.jdk.version>1.7</project.jdk.version>
    <project.encoding>UTF-8</project.encoding>
    <maven.compiler.target>${project.jdk.version}</maven.compiler.target>
    <jetty.version>9.2.10.v20150310</jetty.version>
    <project.reporting.outputEncoding>${project.encoding}</project.reporting.outputEncoding>
    <maven.compiler.compilerVersion>${project.jdk.version}</maven.compiler.compilerVersion>
    <war.runnable.classifier>standalone</war.runnable.classifier>
    <ant.maven.version>1.8</ant.maven.version>
    <enforcer.maven.version>1.4</enforcer.maven.version>
    <deploy.maven.version>2.7</deploy.maven.version>
  </properties>
  <dependencies>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>${javax.servlet.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <version>${jetty.version}</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${compiler.maven.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${clean.maven.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${resources.maven.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${surefire.maven.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <version>${war.maven.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>${install.maven.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${deploy.maven.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>${build.helper.maven.version}</version>
          <executions>
            <execution>
              <id>get-maven-version</id>
              <goals>
                <goal>maven-version</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${enforcer.maven.version}</version>
          <executions>
            <execution>
              <id>enforce-versions</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <fail>true</fail>
                <rules>
                  <requireMavenVersion>
                    <version>${maven.minimal.version}</version>
                    <message>[ERROR] OLD MAVEN [${maven.version}] in use. 
                                            Maven ${maven.minimal.version} or newer is required.</message>
                  </requireMavenVersion>
                  <requireJavaVersion>
                    <version>${project.jdk.version}</version>
                    <message>[ERROR] OLD JDK [${java.version}] in use. 
                                            JDK ${project.jdk.version} or newer is required.</message>
                  </requireJavaVersion>
                  <requirePluginVersions>
                    <banLatest>true</banLatest>
                    <banRelease>true</banRelease>
                    <banSnapshots>true</banSnapshots>
                    <unCheckedPluginList>org.apache.maven.plugins:maven-site-plugin</unCheckedPluginList>
                  </requirePluginVersions>
                  <bannedDependencies>
                    <searchTransitive>true</searchTransitive>
                    <excludes>
                      <exclude>commons-logging</exclude>
                      <exclude>log4j</exclude>
                      <exclude>org.apache.logging.log4j</exclude>
                    </excludes>
                  </bannedDependencies>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>launcher</id>
      <activation>
        <property>
          <name>launcher</name>
        </property>
      </activation>
      <build>
        <resources>
          <resource>
            <directory>src/main/resources</directory>
          </resource>
          <resource>
            <directory>src/main/webapp</directory>
          </resource>
        </resources>
        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>${ant.maven.version}</version>
            <configuration>
              <target>
                <java fork="true" classname="${main.class}">
                  <classpath refid="maven.compile.classpath" />
                </java>
              </target>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>standalone</id>
      <activation>
        <property>
          <name>standalone</name>
        </property>
      </activation>
      <build>
        <finalName>${root.name}-${project.artifactId}</finalName>
        <plugins>
          <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
              <failOnMissingWebXml>false</failOnMissingWebXml>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <version>${spring.boot.maven.version}</version>
            <executions>
              <execution>
                <id>package-runable-war</id>
                <goals>
                  <goal>repackage</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <classifier>${war.runnable.classifier}</classifier>
              <mainclass>${main.class}</mainclass>
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>${ant.maven.version}</version>
            <configuration>
              <target>
                <java fork="true" jar="target/${project.build.finalName}-${war.runnable.classifier}.war" />
              </target>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
